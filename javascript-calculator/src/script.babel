class App extends React.Component { 
  constructor(props) {
    super(props);
    this.state = {
      currentNumber: "0",
      calc: "",
    }
    this.handleClick = this.handleClick.bind(this);
    this.handleClear = this.handleClear.bind(this);
    this.handleOperation = this.handleOperation.bind(this);
  }
  
handleClick = (e) => {
const { currentNumber, calc } = this.state;
  
  this.setState({
    currentNumber: currentNumber === "0" ? e.target.innerText : currentNumber + e.target.innerText,
    calc: calc + e.target.innerText,
  })
}

handleDecimal = (e) => {
const { currentNumber, calc } = this.state;
  this.setState({
    currentNumber: !currentNumber.includes(".") ? currentNumber + e.target.innerText : currentNumber,
    calc: calc + e.target.innerText
  })
}

handleOperation = (e) => {
const { currentNumber, calc} = this.state;
let lastPressed = calc.slice(-1)
let prevLast = calc.slice(-2, -1)

if ((lastPressed.includes("+") || lastPressed.includes("*") || lastPressed.includes("/") || lastPressed.includes("-")) && ( prevLast.includes("+") || prevLast.includes("*") || prevLast.includes("/") || prevLast.includes("-"))) {
     this.setState({
    currentNumber: "0",
    calc: calc.slice(0, -2) + e.target.name,
  })
  } else if (lastPressed.includes("+") || lastPressed.includes("*") || lastPressed.includes("/") || lastPressed.includes("-")) {
  this.setState({
    currentNumber: "0",
    calc: calc.slice(0, -1) + e.target.name,
  })
  } else {
  this.setState({
    currentNumber: "0",
    calc: "(" + calc + ")" + e.target.name,
    })
  }
}

handleMinus = (e) => {
const { currentNumber, calc } = this.state;
 this.setState({
   currentNumber: "0",
   calc: calc.slice(-1) === "-" ? calc : calc + e.target.name,
 })
}
  
handleEqual = (e) => {
const {currentNumber, calc} = this.state;
  this.setState({
    currentNumber: eval(calc)
  })
}
  
handleClear = () => {
  this.setState({
      currentNumber: "0",
      calc: "",
      
  })
} 
  
render () {
return (

<div className="calculator">
  <p style={{position: "absolute", top: 0}}>{JSON.stringify(this.state, null, 2)}</p>
  
  <div id="display" className="display">
    
    {this.state.currentNumber}
  </div>
  <button id="clear" onClick={this.handleClear}>AC</button>
  <button name="/" id="divide" onClick={this.handleOperation} className="orange">÷</button>
  <button name="*" id="multiply" onClick={this.handleOperation} className="orange">×</button>
  <button id="one" onClick={this.handleClick}>1</button>
  <button id="two" onClick={this.handleClick}>2</button>
  <button id="three" onClick={this.handleClick}>3</button>
  <button name="+" id="add" onClick={this.handleOperation} className="orange">+</button>
  <button id="four" onClick={this.handleClick}>4</button>
  <button id="five" onClick={this.handleClick}>5</button>
  <button id="six" onClick={this.handleClick}>6</button>
  <button name="-" id="subtract" onClick={this.handleMinus} className="orange">−</button>
  <button id="seven" onClick={this.handleClick}>7</button>
  <button id="eight" onClick={this.handleClick}>8</button>
  <button id="nine" onClick={this.handleClick}>9</button>
  <button id="zero" onClick={this.handleClick}>0</button>
  <button id="decimal" onClick={this.handleDecimal}>.</button>
  <button id="equals" onClick={this.handleEqual}>=</button>
</div>

    )
  }
}

ReactDOM.render(<App />, document.getElementById("app"));